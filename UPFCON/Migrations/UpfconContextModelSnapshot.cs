// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UPFCON.Models.Context;

#nullable disable

namespace UPFCON.Migrations
{
    [DbContext(typeof(UpfconContext))]
    partial class UpfconContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UPFCON.Models.Attendee", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId");

                    b.ToTable("Attendees");
                });

            modelBuilder.Entity("UPFCON.Models.Author", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Expertise")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("UserId");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("UPFCON.Models.BoardDirectorDecision", b =>
                {
                    b.Property<Guid>("BoardDirectorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ApprovalStatus")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("BoardDirectorId", "EventId");

                    b.HasIndex("EventId");

                    b.ToTable("BoardDirectorDecisions");
                });

            modelBuilder.Entity("UPFCON.Models.Chairman", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsInternal")
                        .HasColumnType("bit");

                    b.HasKey("UserId");

                    b.ToTable("Chairmans");
                });

            modelBuilder.Entity("UPFCON.Models.CommitteeMember", b =>
                {
                    b.Property<Guid>("ChairmanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("InvitationStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("InvitedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RespondedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("ChairmanId", "EventId");

                    b.HasIndex("EventId");

                    b.ToTable("CommitteeMembers");
                });

            modelBuilder.Entity("UPFCON.Models.Contribution", b =>
                {
                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PaperId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("AuthorId", "PaperId");

                    b.HasIndex("PaperId");

                    b.ToTable("Contributions");
                });

            modelBuilder.Entity("UPFCON.Models.Diploma", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AdminId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("VerificationStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VerifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.HasIndex("UserId");

                    b.ToTable("Diplomas");
                });

            modelBuilder.Entity("UPFCON.Models.Evaluation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ClarityScore")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("EvaluationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EvaluatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OriginalityScore")
                        .HasColumnType("int");

                    b.Property<Guid>("PaperId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PertinenceScore")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaperId");

                    b.HasIndex("EvaluatorId", "EventId");

                    b.ToTable("Evaluations");
                });

            modelBuilder.Entity("UPFCON.Models.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Acronym")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("EndsAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("EventType")
                        .HasColumnType("int");

                    b.Property<int>("Location")
                        .HasColumnType("int");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("StartsAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubTopics")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Theme")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Topics")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("UPFCON.Models.Paper", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Abstract")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Keywords")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PublicationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("SubmittedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("Papers");
                });

            modelBuilder.Entity("UPFCON.Models.Attendance", b =>
                {
                    b.Property<Guid>("AttendeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsExpert")
                        .HasColumnType("bit");

                    b.HasKey("AttendeeId", "EventId");

                    b.HasIndex("EventId");

                    b.ToTable("Participations");
                });

            modelBuilder.Entity("UPFCON.Models.SubmissionRules", b =>
                {
                    b.Property<Guid>("EventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdditionalRules")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FileNameFormat")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Font")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Formats")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("LineSpacing")
                        .HasColumnType("int");

                    b.Property<int>("Margins")
                        .HasColumnType("int");

                    b.Property<int>("MaxPages")
                        .HasColumnType("int");

                    b.Property<int>("MinPages")
                        .HasColumnType("int");

                    b.Property<DateTime>("SubmissionDeadline")
                        .HasColumnType("datetime2");

                    b.HasKey("EventId");

                    b.ToTable("SubmissionRules");
                });

            modelBuilder.Entity("UPFCON.Models.TimeSlot", b =>
                {
                    b.Property<Guid>("EventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PaperId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Stat")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("EventId", "PaperId");

                    b.HasIndex("PaperId")
                        .IsUnique();

                    b.ToTable("TimeSlots");
                });

            modelBuilder.Entity("UPFCON.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccountStatus")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Fname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Lname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Pwd")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Phone")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasDiscriminator().HasValue("User");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("UPFCON.Models.Admin", b =>
                {
                    b.HasBaseType("UPFCON.Models.User");

                    b.HasDiscriminator().HasValue("Admin");
                });

            modelBuilder.Entity("UPFCON.Models.BoardDirector", b =>
                {
                    b.HasBaseType("UPFCON.Models.User");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("BoardDirector");
                });

            modelBuilder.Entity("UPFCON.Models.Attendee", b =>
                {
                    b.HasOne("UPFCON.Models.User", "User")
                        .WithOne("Attendee")
                        .HasForeignKey("UPFCON.Models.Attendee", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("UPFCON.Models.Author", b =>
                {
                    b.HasOne("UPFCON.Models.User", "User")
                        .WithOne("Author")
                        .HasForeignKey("UPFCON.Models.Author", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("UPFCON.Models.BoardDirectorDecision", b =>
                {
                    b.HasOne("UPFCON.Models.BoardDirector", "BoardDirector")
                        .WithMany("Decisions")
                        .HasForeignKey("BoardDirectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UPFCON.Models.Event", "Event")
                        .WithMany("BoardDecisions")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BoardDirector");

                    b.Navigation("Event");
                });

            modelBuilder.Entity("UPFCON.Models.Chairman", b =>
                {
                    b.HasOne("UPFCON.Models.User", "User")
                        .WithOne("Chairman")
                        .HasForeignKey("UPFCON.Models.Chairman", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("UPFCON.Models.CommitteeMember", b =>
                {
                    b.HasOne("UPFCON.Models.Chairman", "Chairman")
                        .WithMany("Memberships")
                        .HasForeignKey("ChairmanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UPFCON.Models.Event", "Event")
                        .WithMany("OrganizingCommittee")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chairman");

                    b.Navigation("Event");
                });

            modelBuilder.Entity("UPFCON.Models.Contribution", b =>
                {
                    b.HasOne("UPFCON.Models.Author", "Author")
                        .WithMany("Contributions")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UPFCON.Models.Paper", "Paper")
                        .WithMany("Contributors")
                        .HasForeignKey("PaperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Paper");
                });

            modelBuilder.Entity("UPFCON.Models.Diploma", b =>
                {
                    b.HasOne("UPFCON.Models.Admin", "VerifiedBy")
                        .WithMany("VerifiedDiplomas")
                        .HasForeignKey("AdminId");

                    b.HasOne("UPFCON.Models.User", "User")
                        .WithMany("Diplomas")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("VerifiedBy");
                });

            modelBuilder.Entity("UPFCON.Models.Evaluation", b =>
                {
                    b.HasOne("UPFCON.Models.Paper", "Paper")
                        .WithMany("Evaluations")
                        .HasForeignKey("PaperId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("UPFCON.Models.CommitteeMember", "Evaluator")
                        .WithMany("Evaluations")
                        .HasForeignKey("EvaluatorId", "EventId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Evaluator");

                    b.Navigation("Paper");
                });

            modelBuilder.Entity("UPFCON.Models.Paper", b =>
                {
                    b.HasOne("UPFCON.Models.Event", "Event")
                        .WithMany("SubmittedPapers")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("UPFCON.Models.Attendance", b =>
                {
                    b.HasOne("UPFCON.Models.Attendee", "Attendee")
                        .WithMany("Events")
                        .HasForeignKey("AttendeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UPFCON.Models.Event", "Event")
                        .WithMany("Attendees")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attendee");

                    b.Navigation("Event");
                });

            modelBuilder.Entity("UPFCON.Models.SubmissionRules", b =>
                {
                    b.HasOne("UPFCON.Models.Event", "Event")
                        .WithOne("SubmissionRules")
                        .HasForeignKey("UPFCON.Models.SubmissionRules", "EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("UPFCON.Models.TimeSlot", b =>
                {
                    b.HasOne("UPFCON.Models.Event", "Event")
                        .WithMany("Planning")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("UPFCON.Models.Paper", "Paper")
                        .WithOne("TimeSlot")
                        .HasForeignKey("UPFCON.Models.TimeSlot", "PaperId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Event");

                    b.Navigation("Paper");
                });

            modelBuilder.Entity("UPFCON.Models.Attendee", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("UPFCON.Models.Author", b =>
                {
                    b.Navigation("Contributions");
                });

            modelBuilder.Entity("UPFCON.Models.Chairman", b =>
                {
                    b.Navigation("Memberships");
                });

            modelBuilder.Entity("UPFCON.Models.CommitteeMember", b =>
                {
                    b.Navigation("Evaluations");
                });

            modelBuilder.Entity("UPFCON.Models.Event", b =>
                {
                    b.Navigation("Attendees");

                    b.Navigation("BoardDecisions");

                    b.Navigation("OrganizingCommittee");

                    b.Navigation("Planning");

                    b.Navigation("SubmissionRules");

                    b.Navigation("SubmittedPapers");
                });

            modelBuilder.Entity("UPFCON.Models.Paper", b =>
                {
                    b.Navigation("Contributors");

                    b.Navigation("Evaluations");

                    b.Navigation("TimeSlot");
                });

            modelBuilder.Entity("UPFCON.Models.User", b =>
                {
                    b.Navigation("Attendee");

                    b.Navigation("Author");

                    b.Navigation("Chairman");

                    b.Navigation("Diplomas");
                });

            modelBuilder.Entity("UPFCON.Models.Admin", b =>
                {
                    b.Navigation("VerifiedDiplomas");
                });

            modelBuilder.Entity("UPFCON.Models.BoardDirector", b =>
                {
                    b.Navigation("Decisions");
                });
#pragma warning restore 612, 618
        }
    }
}
